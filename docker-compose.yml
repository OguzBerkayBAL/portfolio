services:
  # üêò PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: dark-tech-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-dark_tech_portfolio_dev}
      POSTGRES_USER: ${DATABASE_USERNAME:-portfolio_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-dark_tech_2024}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "${DATABASE_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - dark-tech-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME:-portfolio_user} -d ${DATABASE_NAME:-dark_tech_portfolio_dev}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # üóÑÔ∏è Adminer - Database Management UI
  adminer:
    image: adminer:4.8.1
    container_name: dark-tech-adminer
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
    ports:
      - "8080:8080"
    networks:
      - dark-tech-network
    depends_on:
      postgres:
        condition: service_healthy

  # üöÄ Redis - Caching & Sessions (Optional)
  redis:
    image: redis:7-alpine
    container_name: dark-tech-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-portfolio_redis_password}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - dark-tech-network
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # üåê Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dark-tech-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: ${DATABASE_USERNAME:-portfolio_user}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-dark_tech_2024}
      DATABASE_NAME: ${DATABASE_NAME:-dark_tech_portfolio_dev}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-portfolio_redis_password}
      JWT_SECRET: ${JWT_SECRET:-dark_tech_portfolio_jwt_secret}
      PORT: ${API_PORT:-3002}
    ports:
      - "${API_PORT:-3002}:3002"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - dark-tech-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run start:dev

volumes:
  postgres_data:
    driver: local
    name: dark-tech-postgres-data
  redis_data:
    driver: local
    name: dark-tech-redis-data

networks:
  dark-tech-network:
    driver: bridge
    name: dark-tech-network
